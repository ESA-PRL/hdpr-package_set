import_package 'drivers/pcan_pcie_mini' do |pkg|
    def pkg.prepare
        # retrigger build and install if pcan kernel module not loaded
        if !running_in_docker? && !has_pcan_api? # defined in init.rb
            prepare_for_forced_build
        end

        super
    end

    def pkg.do_build
        in_dir (srcdir) do
            if running_in_docker?
                kernel_headers=`dpkg-query -f '${Package} ${Status}\n' -W 'linux-headers-*-generic' | awk '$NF == "installed" {printf $1}'`
                kernel_location="/usr/src/#{kernel_headers}/"

                run('build', "make KERNEL_LOCATION=#{kernel_location} clean && make KERNEL_LOCATION=#{kernel_location}")
            else
                run('build', 'make clean && make')
            end
        end
    end

    def pkg.do_install
        in_dir (srcdir) do
            # cannot reload udev rules or do modprobe in docker
            if running_in_docker?
                run('install', 'sudo make -i install')
            else
                run('install', 'sudo make install && sudo modprobe pcan')
            end
        end
    end

    pkg.post_install do
        pkg.progress_start "building %s", done_message: "built %s" do
            pkg.do_build
        end
        pkg.progress_start "installing %s", done_message: "installed %s" do
            pkg.do_install
        end
    end
end

cmake_package "drivers/platform_driver_pcan"
orogen_package "drivers/orogen/platform_driver_pcan"
